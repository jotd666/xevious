# $Id: Makefile,v 1.3 2001/05/03 13:43:42 fma Exp $

PLATFORM = neogeo
#PLATFORM = amiga
TARGET = xevious
NGH = 0x0420

#######################################
# Base dir of your m68k gcc toolchain #
#######################################

BASEDIR = $(NEODEV)
AS = as
LD = gcc
CC = gcc
OBJC = objcopy
BIN2O = bin2elf
GFXCC = gfxcc
FIXCNV = fixcnv
CP = cp
MD = mkdir
RM = rm

#######################################
# Path to libraries and include files #
#######################################

INCLUDES = -I src -I src/$(PLATFORM)/include -I src/$(PLATFORM) -I src/$(PLATFORM)/include/$(OUTPUT)
INCDIR = $(BASEDIR)/m68k/include
LIBDIR = $(BASEDIR)/m68k/lib

###################################
# Output: {cart, cd} *lower case* #
###################################
#OUTPUT = cart
#OUTPUT = cd
ifeq ($(OUTPUT),)
	OUTPUT = cart
endif

OBJDIR = obj\$(OUTPUT)
BINDIR = bin\$(OUTPUT)
ASSETDIR = assets\$(PLATFORM)\$(OUTPUT)
ISODIR = iso

##############################
# Object Files and Libraries #
##############################

OBJS = 	$(OBJDIR)/$(PLATFORM).o \
				$(OBJDIR)/xevious_main.o \
				$(OBJDIR)/xevious_sub.o \
				$(OBJDIR)/map_rom.o

BIN = $(BINDIR)\$(TARGET).bin
								
#LIBS = -linput -lprocess -lmath -lvideo -lc -lgcc

#####################
# Compilation Flags #
#####################

ASFLAGS = -m68000 --register-prefix-optional $(INCLUDES) --defsym __$(PLATFORM)__=1 --defsym __$(OUTPUT)__=1 --defsym __NGH__=$(NGH)
LDFLAGS = -Wl,-N,-Map=$(TARGET).$(OUTPUT).map,-cref,-Tsrc/$(PLATFORM)/neo$(OUTPUT).x
CCFLAGS = -m68000 -O3 -Wall -fomit-frame-pointer -ffast-math -fno-builtin -nostartfiles -nodefaultlibs -D__$(OUTPUT)__

ARFLAGS = cr

DEBUG = -g

ifeq ($(OUTPUT),cart)
  ISO = 
  P_SIZE = 1024
	P1 = $(BINDIR)\$(TARGET).p1
	C1 = $(BINDIR)\$(TARGET).c1
	C2 = $(BINDIR)\$(TARGET).c2
	S1 = $(ASSETDIR)\$(TARGET).s1
	M1 = $(ASSETDIR)\$(TARGET).m1
	V1 = $(ASSETDIR)\$(TARGET).v1
	SPRITES = $(C1) $(C2)
	OUTPUT_INSTALL = install_cart
	MAMEROMDIR = roms\neogeo\xevious
endif

ifeq ($(OUTPUT),cd)
  ISO = $(ISODIR)\$(TARGET).iso
	PRG = $(BINDIR)\$(TARGET).PRG
	SPRITES = $(ASSETDIR)\$(TARGET).SPR
	FIX = $(ASSETDIR)\$(TARGET).FIX
	Z80 = $(ASSETDIR)\$(TARGET).Z80
	PCM = $(ASSETDIR)\$(TARGET).PCM
	OUTPUT_INSTALL = install_cd
	MAMEROMDIR = roms\neocdz
endif

##############
# Make rules #
##############

.PHONY : all
.PHONY : directories
.PHONY : install

all : directories $(ISO) $(P1) $(PRG) $(SPRITES)

directories : $(OBJDIR) $(BINDIR) $(ISODIR)\contents
	
$(OBJDIR) :
	$(MD) $(OBJDIR)

$(BINDIR) :
	$(MD) $(BINDIR)

$(ISODIR)\contents :
	$(MD) $(ISODIR)\contents

### CART

$(P1) : $(BIN)
	$(OBJC) --gap-fill=0x00 --pad-to=0x20000 -R .data -O binary $< $@
	@romwak /f $@ >nul:
	@romwak /p $@ $@ $(P_SIZE) 255 >nul:

$(C1) : $(ASSETDIR)/$(TARGET)-c1.bin
	@romwak /p $< $@ 1024 255 > nul:
	
$(C2) : $(ASSETDIR)/$(TARGET)-c2.bin
	@romwak /p $< $@ 1024 255 > nul:

### CD

$(ISO) : $(PRG) $(SPRITES)
	@copy $(ASSETDIR)\*.* $(ISODIR)\contents
	@copy $(PRG) $(ISODIR)\contents
	$(RM) -f $(ISO)
	mkisofs -iso-level 1 -o $(ISO) -pad -N -V "$(TARGET)" $(ISODIR)\contents

#chdman createcd -f -i cds\$(TARGET).iso -o "roms/neocd/$(DRIVER)/puzzled (1994)(snk)(jp-us)[joy joy kid].chd"
  
$(PRG): $(BIN)
	$(OBJC) -O binary $< $@

### CART & CD

$(BIN) : $(OBJS) src/$(PLATFORM)/neo$(OUTPUT).x makefile.ng
	$(LD) -L$(LIBDIR) $(CCFLAGS) $(LDFLAGS) $(OBJS) $(LIBS) -o $@

$(OBJDIR)/%.o : src/$(PLATFORM)/%.68k src/xevious.inc makefile.ng
	$(AS) -a=$*.lst $(ASFLAGS) $< -o $@

$(OBJDIR)/%.o : src/%.68k src/xevious.inc makefile.ng
	$(AS) -a=$*.lst $(ASFLAGS) $< -o $@

### CLEAN AND INSTALL

clean:
	$(RM) -Rf obj
	$(RM) -Rf bin
	$(RM) -Rf iso
	
clean_install: clean $(INSTALL_OUTPUT)	
	$(RM) -f $(MAMEROMDIR)\*.p1
	$(RM) -f $(MAMEROMDIR)\*.s1
	$(RM) -f $(MAMEROMDIR)\*.c?
	$(RM) -f $(MAMEROMDIR)\*.m1
	$(RM) -f $(MAMEROMDIR)\*.v1
	$(RM) -f $(MAMEROMDIR)\*.iso

$(MAMEROMDIR) :
	$(MD) $(MAMEROMDIR)
	
install_cart: $(MAMEROMDIR)
	@copy $(P1) $(MAMEROMDIR)
	@copy $(S1) $(MAMEROMDIR)
	@copy $(C1) $(MAMEROMDIR)
	@copy $(C2) $(MAMEROMDIR)
	@copy $(M1) $(MAMEROMDIR)
	@copy $(V1) $(MAMEROMDIR)
  
install_cd: $(MAMEROMDIR)
	@copy $(ISO) $(MAMEROMDIR)
  
install: all $(OUTPUT_INSTALL)
