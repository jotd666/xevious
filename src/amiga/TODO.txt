* to see with Mark:

- sprite shadow management: complete?
  probably not for double width/height objects
- find a way to make up for those shaking ground enemies
- level 14: tile layout looks wrong (bird drawing)

* can be worked on my own:

- stop when sprites are missing (blitz)
- sheonite sprites too fast, seem to fail the sprite erase phase
  workaround (maybe): if sheonite on screen, clear all screen (no biggie
  because nothing else is displayed on screen)
- updating score fails with OR because of double buffering
- sprites for big mothership: test including sprite clipping
- rip sounds
- title tiles missing (level 14) title tiles also with brown color config???
  related to hole in map???
- check if tiles missing (wrongly??) in level 1 too!!
  probably related to warning (improve the warning): 22:64: <PIL.Image.Image image mode=RGB size=8x8 at 0x187C30614F0>: (x=0,y=0) rounded color (81, 81, 81) (#515151) not found, orig color (81, 81, 81) (#515151), maybe try adjusting precision mask 0 close colors: []
- run the game to rip sprites for soltower & flags
- glitter sprite (title screen) could be a HW sprite
- increases sprite struct (done) & mark it as sprite if no need to clear the area
  (plus if just went inactive, remove the sprite, so got to have stored the
   sprite address in copperlist somewhere): doesn't work for hw sprites: not cleared!
- how to display sprites with y<0 (y clip): will need manual y clipping DAMN!!
- remove quantization replace non-frequent colors by other existing colors
- 1 color lost because of fg tiles: not useable color is color 17: it is the color of the FG tiles
  we _could_ use it with a hack in the FG row copperlist when nothing is displayed...
- gnu as bug: .align directive doesn't work all the time (sprites!!)

further optims:

- a lot of blank sprites should just be NOT drawn (ex: clut 0)
- cookie cut with fixed 0 source if plane_pic_0 (saves bandwidth)
- generate NOT tables for FG tiles to optimize tile refresh
- don't generate mirror X-sprites if log doesn't tell game is using it
- if no tile can be double width / double height AND simple at the same time
  generate 16x32,32x16,32x32 bob data directly for a fewer number of blits
  
Build process:

- python and sox must be installed to be able to perform the wav2raw conversions
- get "bitplanelib.py" (asset conversion tool needs it) at https://github.com/jotd666/amiga68ktools.git
- run "makefile" to generate missing .68k files using python scripts, then build


When changing asset-related data (since dependencies aren't good):

- To update the "graphics.68k" & "palette*.68k" files from "assets/amiga" subdir, 
  just run the "convert_sprites.py" python script, 
- To update sounds, use "convert_sounds.py"
  python script (audio) to create sound*.68k files.
  
