* to see with Mark:

- sprite shadow management: complete?
- find a way to make up for those shaking ground enemies
- sprite CLUT missing transparency

* can be worked on my own:

- sprites for big mothership (allows to use alternate brown/gold colors): set section 14
- rip sounds
- find a way to NOT use color17 so FG color doesn't interfere with sprites
- black small balls enemies not displayed: make a difference
  between black and transparent color
- still some missing tiles (zone 14)
- blit sprite in negative: should accept it up to -16
  (careful with multable: maybe first add 16, multiply then
  sub 16*40, plus add 16 "lost" rows. OR clip y blit (much faster)
  
  

further optims:

- cookie cut with fixed 0 source if plane_pic_0 (saves bandwidth)
- generate NOT tables for FG tiles to optimize tile refresh
- don't generate mirror X-sprites if log doesn't tell game is using it
- if no tile can be double width / double height AND simple at the same time
  generate 16x32,32x16,32x32 bob data directly for a fewer number of blits
  
  Build process:

- To create the ".bin" files and some palette .s asm files, from "assets" subdir, 
  just run the "convert_sprites.py" python script, then use the "convert_sounds.py"
  python script (audio).
- python and sox must be installed to be able to perform the wav2raw conversions
- get "bitplanelib.py" (asset conversion tool needs it) at https://github.com/jotd666/amiga68ktools.git

Binary assets must be created first, then makefile must be called to create the main program
