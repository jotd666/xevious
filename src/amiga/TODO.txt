* to see with Mark:

- sprite shadow management: complete?
  probably not for double width/height objects
- find a way to make up for those shaking ground enemies
- sprite CLUT missing transparency
- big boss (section 14): some bullets seem to stick around
- level 14: tile layout looks wrong (bird drawing)

* can be worked on my own:

- sprites for big mothership (allows to use alternate brown/gold colors): set section 14
- rip sounds
- dump statistics on sprite colors: color used in how many sprites, ...
- find a way to NOT use color17 so FG color doesn't interfere with sprites
- black small balls enemies not displayed: make a difference
  between black and transparent color
- remove colors only used in "bragza" as there are a lot of them and
  we can't really afford it (maybe later a sprite for it with changing palette)
- finish to name enemies & objects (useful for color stats)
- tiles not found at start??? title tiles also with brown color config???
  related to hole in map???
- fg tiles flashing (nb lives)

further optims:

- a lot of blank sprites should just be NOT drawn (ex: clut 0)
- cookie cut with fixed 0 source if plane_pic_0 (saves bandwidth)
- generate NOT tables for FG tiles to optimize tile refresh
- don't generate mirror X-sprites if log doesn't tell game is using it
- if no tile can be double width / double height AND simple at the same time
  generate 16x32,32x16,32x32 bob data directly for a fewer number of blits
  
  Build process:

- Don't run makefile right away. 
  Not all .68k files are available as is. Some have to be generated.
- To create the "graphics.68k" & "palette*.68k" files from "assets/amiga" subdir, 
  just run the "convert_sprites.py" python script, then use the "convert_sounds.py"
  python script (audio) to create sound*.68k files.
- python and sox must be installed to be able to perform the wav2raw conversions
- get "bitplanelib.py" (asset conversion tool needs it) at https://github.com/jotd666/amiga68ktools.git

Binary assets must be created first, then makefile must be called to create the main program
